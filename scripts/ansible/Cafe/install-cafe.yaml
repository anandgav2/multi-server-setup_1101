- name: CAFE Installation
  hosts: cafe
  become: yes # Run tasks with root privileges
  vars:
    log_file: "{{ lookup('env', 'LOG_FILE').split(',') | first}}"
    comm_config_file: "{{ lookup('env', 'CONFIG_FILE').split(',') | first}}"
    installer_path: "{{ lookup('env', 'INSTALLER_PATH').split(',') | first}}"
  
  tasks:

    - name: Load Global parameters
      include_vars:
        file: "{{ item }}"
      with_items:
        - "{{ installer_path }}/cip_setup_automation.yml"
        - "{{ installer_path }}/installer-versions.yml"
        - "{{ comm_config_file }}"     

    - name: Copy Config File
      copy:
        src: "./cafe-config.ini"
        dest: "{{ installer_path }}"
        remote_src: false
        group: abinitio
      become_user: "{{ functional_user }}"

    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          => Updating Cafe Config file
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: Update AG_URL in cafe-config.ini
      ansible.builtin.replace:
        path: "{{ installer_path }}/cafe-config.ini"
        regexp: 'AG_URL'
        replace: '{{ ag_url }}'

    - name: Update AG_JOINER password in cafe-config.ini
      ansible.builtin.replace:
        path: "{{ installer_path }}/cafe-config.ini"
        regexp: 'JOINER_PASSWORD'
        replace: '{{ ag_encrypted_password }}'

    - name: Read Coop Configuration File
      slurp:
        src: "{{ installer_path }}/coop-config.ini"
      register: coop_config_file_content

    - name: Read Configuration File
      slurp:
        src: "{{ installer_path }}/cafe-config.ini"
      register: config_file_content

    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          =>Searching for Cafe installer Version {{ cafe_version }}
        state: present
      delegate_to: localhost
      no_log: true
      become: false
    
    - name: Find the Installer Tar
      find:
        paths: "{{ installer_path }}"
        patterns: "Cafe*{{ cafe_version }}*.*"
      register: found_files
      delegate_to: localhost
      become: false

    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          => Found Cafe Installer in {{ found_files.files[0].path }}
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: Copy files to remote host
      copy:
        src: "{{ item.path }}"
        dest: "{{ installer_path }}"
        remote_src: false
        group: abinitio
      loop: "{{ found_files.files }}"
      become_user: "{{ functional_user }}"

    - name: Extract Folder Path
      set_fact:
        folder_path: "{{ found_files.files[0].path |  regex_replace('\\.(tgz|tar\\.gz|tar)$', '')  }}"

    - name: Display  Folder Path
      ansible.builtin.debug:
        var: folder_path

    - name: Untar Files
      shell: |
        su - {{ item }} -c "tar -xvf {{ installer_path }}/Cafe*{{ cafe_version }}*.* -C {{ installer_path }}"
      loop:
        - "{{ functional_user }}"

    - name: Parse All Configuration Values
      set_fact:
        coop_config_values: "{{ (coop_config_file_content['content'] | b64decode).split('\n') | map('trim') }}"
        config_values: "{{ (config_file_content['content'] | b64decode).split('\n') | map('trim') }}"

    - name: Read Installation Directory value from config
      set_fact:
        app_hub_dest: "{{ coop_config_values | select('match', '^app_hub_dest=(.*)') | map('regex_replace', '^app_hub_dest=(.*)', '\\1') | first }}"

    - name: Display Arguments
      debug:
        var: config_values

    - name: Getting URL
      set_fact:
        matched_lines: "{{ config_values | select('regex', 'pkg_appServer_http_port|pkg_appServer_deploy_path') | list }}"

    - name: Getting URL
      set_fact:
        port_number: "{{ matched_lines[0].split('=')[-1] }}"
        root_path: "{{ matched_lines[1].split('=/')[-1] }}"

    - name: Enc Cafe User Password
      shell: | 
        ansible-vault encrypt_string --vault-password-file ../vault_key "{{ web_app_user }}" 
      delegate_to: localhost
      register: enc_password
      become: false

    - name: Write Common Config
      lineinfile:
        path: "{{ comm_config_file }}"
        line: |
          cafe_host: "{{ ansible_hostname }}"
          cafe_port: "{{ port_number }}"
          cafe_url: "http://{{ ansible_hostname }}:{{ port_number }}/{{ root_path }}/app/"
          cafe_root_path: "{{ root_path }}"
          cafe_user: "{{ web_app_user }}"
          cafe_password: {{ enc_password.stdout }}
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          => Creating setup.properties file for cafe installation and staring Cafe Deployment
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: Create properties file
      ansible.builtin.command:
       cmd: sh -c "cp -r {{ installer_path }}/cafe-config.ini {{ folder_path }}/setup.properties"
      become_user: "{{ functional_user }}"

    - name: Run Deployment
      ansible.builtin.command:
        cmd: sh -c "source /etc/profile  && ./setup.sh batch"
      register: command_output
      become_user: "{{ functional_user }}"
      args:
        chdir: "{{ folder_path }}"

    - name: Display Expect Script Output
      debug:
        var: command_output

    - name: Start Cafe
      shell: |
        su - {{ functional_user }} -c "ab-app start cipcafe"
      register: command_outputs

    - name: Display Expect Script Output
      debug:
        var: command_output

    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          => Starting Cafe "ab-app start cipcafe"
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: find host alias in host_alias.txt
      set_fact:
         eme_host_alias: "{{ hostvars[item].ab_host_alias }}"
      loop: "{{ hostvars.keys() | select('match', 'eme') | list }}"

    - name: Add cafe settings for eme in apphubrc
      lineinfile:
        path: "{{ app_hub_dest }}/config/apphubrc"
        line: |
          AB_AIR_ROOT @ cipcafe : //{{ eme_host_alias }}{{ data_root_path }}/eme/cipeme/repo
          AB_AIR_BRANCH @ cipcafe : main
          AB_APPCONF_ROOT_DIR @ cipcafe : {{ data_root_path }}/sand/appconfdir

    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          => Cafe URL - http://{{ ansible_host }}:{{ port_number }}/{{ root_path }}/app/
        state: present
      delegate_to: localhost
      no_log: true
      become: false

- name: Assign Cafe User Role in AG
  hosts: ag
  become: yes # Run tasks with root privileges
  vars:
    log_file: "{{ lookup('env', 'LOG_FILE').split(',') | first}}"
    comm_config_file: "{{ lookup('env', 'CONFIG_FILE').split(',') | first}}"
    installer_path: "{{ lookup('env', 'INSTALLER_PATH').split(',') | first}}"
  
  tasks:

    - name: Load Global parameters
      include_vars:
        file: "{{ item }}"
      with_items:
        - "{{ installer_path }}/cip_setup_automation.yml"
        - "{{ installer_path }}/installer-versions.yml"
        - "{{ comm_config_file }}"     

    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          => Assigning Cafe Roles to Webapp User in Authorization Gateway
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: Create AG User Feeds Directory
      ansible.builtin.file:
        path: "{{ apps_root_path }}/abinitio/ag_user_feeds/cafe"
        state: directory
        group: abinitio
      become_user: "{{ functional_user }}"
    
    - name: Copy AG Feed File and User CSVs for AG
      copy:
        src: "{{ item }}"
        dest: "{{ apps_root_path }}/abinitio/ag_user_feeds/cafe"
        remote_src: false
        group: abinitio
      with_items:
        - ./AGPrincipalRole.csv
        - ./CafeCreateUserGroup.feed
      become_user: "{{ functional_user }}"

    - name: update CafeCreateUserGroup.feed
      when: inventory_hostname != 'a360-instance'
      lineinfile:
        path: "{{ apps_root_path }}/abinitio/ag_user_feeds/cafe/CafeCreateUserGroup.feed"
        line: |
          FILE_LIST: {{ apps_root_path }}/abinitio/ag_user_feeds/cafe/*.csv
        state: present
      become_user: "{{ functional_user }}"

    - name: Setup User
      shell: |
        source /etc/profile
        source {{ ag_deployment_root_dir }}/config/import.profile
        export AB_AG_CONN_PARAMS="$AB_AG_CONN_PARAMS -u {{ ag_user }} -p {{ ag_password }}"
        ag-import feed save {{ apps_root_path }}/abinitio/ag_user_feeds/cafe/CafeCreateUserGroup.feed
        ag-import run -feed "CafeCreateUserGroup" -progress -approve
      become_user: "{{ functional_user }}"
