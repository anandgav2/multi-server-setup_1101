- name: EME Installation
  hosts:
    - eme
  become: yes # Run tasks with root privileges
  vars:
    log_file: "{{ lookup('env', 'LOG_FILE').split(',') | first}}"
    installer_path: "{{ lookup('env', 'INSTALLER_PATH').split(',') | first}}"

  tasks:

    - name: Load Global parameters
      include_vars:
        file: "{{ item }}"
      with_items:
        - "{{ installer_path }}/cip_setup_automation.yml"
        - "{{ installer_path }}/installer-versions.yml"
        - ./password.yml

    - name: Create EME directory
      file:
        path: "{{ data_root_path }}/eme/cipeme"
        state: directory
        recurse: yes
        group: abinitio
      become_user: "{{ functional_user }}"
   
    - name: Create EME
      ansible.builtin.command: "{{ installer_path }}/source_and_run.sh air repository create"
      register: command_output
      become_user: "{{ functional_user }}"

    - name: Display EME Status
      ansible.builtin.debug:
        var: command_output.stdout_lines

    - name: Change EME Charset
      ansible.builtin.command: "{{ installer_path }}/source_and_run.sh {{ item }}"
      with_items:
        - air repository shutdown
        - air repository charset -change utf-8 -force
        - air repository start
        - air repository charset -show
      register: command_output
      become_user: "{{ functional_user }}"

    - name: Check EME Status
      ansible.builtin.command: "{{ installer_path }}/source_and_run.sh {{ item }}"
      with_items:
        - air repository show-server
      register: command_output
      become_user: "{{ functional_user }}"

    - name: Display EME Status
      ansible.builtin.debug:
        var: command_output

    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          =>EME started on {{ inventory_hostname }}. EME Status
             {{ command_output.results[0].stdout }}
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: Create EME Root User
      ansible.builtin.command: "{{ installer_path }}/source_and_run.sh {{ item }}"
      with_items:
        - air system user create {{ eme_user }} -group eme-root -clear-password {{ eme_en_passwd }}
      register: command_output
      become_user: "{{ functional_user }}"
      no_log: true
    

  handlers:
    - name: Reload Profile
      shell: source /etc/profile  # Command to reload the profile
