
- name: print variables
  debug:
    var: "{{ input }}"
  with_items:
    - host
    - host_ip
    - pem_file
    - config
    - counter
    - user
    - host_name
  loop_control:
        loop_var: input

- name: Load Global config parameters
  include_vars:
    file: executables.yml
    file: "{{ installer_path }}/installer-versions.yml"

- name: Set enrichment based on cip_version
  set_fact:
    enrichment: "{{ vars['enrichmentV' + cip_version.split('-')[0]] }}"
    
- name: Display enrichment variable
  debug:
    var: enrichment

- name: write to inventory
  shell: |
          echo -e "    cip_instance_{{ counter }}:\n        ansible_host: {{ host_ip }}\n        ansible_ssh_private_key_file: {{ pem_file }}\n        ansible_user: {{ user }}\n        ab_host_alias: '{{ host }}'" >> ./inventory.yml
  when: '"a360" not in config'

  
- name: write executable for each host
  lineinfile: 
    #path: "{{ host | split(' ') | first + '.executables.csv' }}"
    path: "{{ host_ip + '.executables.csv' }}"
    line: "{{ lookup('vars',subsystem,default='') }}"
    state: present
    create: true
  loop: "{{ config | split(',') }}"
  loop_control:
        loop_var: subsystem
  no_log: false


  #- name: remove quotes from executable file
  #replace:
  #  path: "{{ host | split(' ') | first + '.executable.csv' }}"
  #  regexp: '"'
  # replace: ''

  #- name: remove empty lines from executable file
  #shell: |
  # sed -i '/^$/d' "{{ host | split(' ') | first + '.executable.csv' }}"
    #sed '/^$/d' "{{ host | split(' ') | first + '.executable.csv' }}" > "{{ host | split(' ') | first + '.executable.csv.tmp' }}"
    #mv "{{ host | split(' ') | first + '.executable.csv.tmp' }}" "{{ host | split(' ') | first + '.executable.csv' }}"
    #become_user: abinitio
  
- name: set to cip_common_all_target_servers  
  set_fact: 
    cip_common_all_target_servers: "{{ cip_common_all_target_servers| default('') + ',' + host }}"
  when: '"utility" in config'

- name: set to cip_common_control_server
  set_fact:
    cip_common_control_server: "{{ cip_common_control_server| default('') + ',' + host }}"
  when: '"control" in config'

- name: set to cip_common_act_server
  set_fact:
    cip_common_act_server: "{{ cip_common_act_server| default('') + ',' + host }}"
  when: '"control" in config'

- name: set to cip_common_fulfillment_server
  set_fact:
    cip_common_fulfillment_server: "{{ cip_common_fulfillment_server| default('') + ',' + host }}"
  when: '"fulfillment" in config'

- name: set to cip_common_communication_server
  set_fact:
    cip_common_communication_server: "{{ cip_common_communication_server| default('') + ',' + host }}"
  when: '"communication" in config'

- name: set to cip_common_audit_server
  set_fact:
    cip_common_audit_server: "{{ cip_common_audit_server| default('') + ',' + host }}"
  when: '"audit" in config'
  
- name: set to cip_common_collect_server
  set_fact:
    cip_common_collect_server: "{{ cip_common_collect_server| default('') + ',' + host }}"
  when: '"collect_event" in config'
  
- name: set to cip_common_contact_policy_server
  set_fact:
    cip_common_contact_policy_server: "{{ cip_common_contact_policy_server| default('') + ',' + host }}"
  when: '"contact_policy" in config'  

- name: set to cip_common_detect_servers
  set_fact:
    cip_common_detect_servers: "{{ cip_common_detect_servers| default('') + ',' + host }}"
  when: '"detect" in config' 
  
- name: set to cip_common_eligibility_servers
  set_fact:
    cip_common_eligibility_servers: "{{ cip_common_eligibility_servers| default('') + ',' + host }}"
  when: '"detect" in config' 
  
- name: set to cip_common_eligible_queue_servers
  set_fact:
    cip_common_eligible_queue_servers: "{{ cip_common_eligible_queue_servers| default('') + ',' + host }}"
  when: '"detect" in config' 
  
- name: set to cip_common_enrichment_queue_servers
  set_fact:
    cip_common_enrichment_queue_servers: "{{ cip_common_enrichment_queue_servers| default('') + ',' + host }}"
  when: '"enrichment_queue" in config.split(",")' 

- name: set to cip_common_enrichment_servers
  set_fact:
    cip_common_enrichment_servers: "{{ cip_common_enrichment_servers| default('') + ',' + host }}"
  when: '"enrichment" in config.split(",")'
  
- name: set to cip_common_inbound_channel_queue_servers
  set_fact:
    cip_common_inbound_channel_queue_servers: "{{ cip_common_inbound_channel_queue_servers| default('') + ',' + host }}"
  when: '"control" in config'
  
- name: set to cip_common_segmentation_server
  set_fact:
    cip_common_segmentation_server: "{{ cip_common_segmentation_server| default('') + ',' + host }}"
  when: '"segmentation" in config'

- name: set to cip_common_nbos_server
  set_fact:
    cip_common_nbos_server: "{{ cip_common_nbos_server| default('') + ',' + host }}"
    cip_common_nbos_server_v1: "{{ cip_common_nbos_server| default('') + ',' + host }}"
  when: '"nbos_adapter" in config'

- name: set to inbound_channel_adc_hosts_for_nbos_adc_adapter_queue
  set_fact:
    inbound_channel_adc_hosts_for_nbos_adc_adapter_queue: "{{ inbound_channel_adc_hosts_for_nbos_adc_adapter_queue| default('') + ',' + host }}"
  when: '"nbos_data" in config'

- name: set to cipdb_hostname
  set_fact:
     CIPDB_HOST: "{{ CIPDB_HOST | default('') + ',' + host_name }}"
  when: '"cipdb" in config'

  #- name: print var
  #debug:
  #      msg: "{{ cip_common_all_target_servers | split(',') | reject('match', '^$') | join(',') }}" 
  #      #  set_fact: cip_common_all_target_servers= cip_common_all_target_servers+ "a"

  #- name: update subsystem mapping yml
  #lineinfile:
  # path: subsystem_mapping.yml
  # line: |
  #   "{{ 'cip_common_all_target_servers: ' + cip_common_all_target_servers | split(',') | reject('match', '^$') | join(',') }}"
  # state: present
  # create: true

