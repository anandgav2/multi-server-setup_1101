- name: seed-data
  hosts:
     - cipui
     - control
  become: yes # Run tasks with root privileges

  vars:
    log_file: "{{ lookup('env', 'LOG_FILE').split(',') | first}}"
    comm_config_file: "{{ lookup('env', 'CONFIG_FILE').split(',') | first}}"
    demo_type: "{{ lookup('env', 'DEMO_TYPE').split(',') | first}}"
    installer_path: "{{ lookup('env', 'INSTALLER_PATH').split(',') | first}}"

  tasks:

    - name: Load Global parameters
      include_vars:
        file: "{{ item }}"
      with_items:
        - "{{ comm_config_file }}"
        - "{{ installer_path }}/cip_setup_automation.yml"
        - "../QueryIT/config-params.yml"

    - name: Start CIP-Utility Subsystems
      ansible.builtin.command: '{{ installer_path }}/source_and_run.sh {{ item }}'
      with_items:
        - "{{ cip_base_path }}/private_internal/bin/cip-control.ksh start utility"
      register: command_output
      become_user: "{{ functional_user }}"
      args:
        chdir: "{{ cip_base_path }}/private_internal/run"
      when: inventory_hostname == 'cipui'

    - name: Pause for 60 seconds
      pause:
        seconds: 60

    - name: start CIP-Control Subsystems
      ansible.builtin.command: '{{ installer_path }}/source_and_run.sh {{ item }}'
      with_items:
        - "{{ cip_base_path }}/private_internal/bin/cip-control.ksh start control_subsystem"
        - air sandbox run "{{ cip_base_path }}/private_internal/pset/inbound_channel/build_nbos_lookup.pset" -USE_ALGO_OFFER False
      register: command_output
      become_user: "{{ functional_user }}"
      args:
        chdir: "{{ cip_base_path }}/private_internal/run"
      when: inventory_hostname == 'control'

    - name: Pause for 120 seconds
      pause:
        seconds: 120
    
    - name: Check if lookup exists
      shell: |
        ls  $(air sandbox eval . CIP_COMMON_LOCAL_SERIAL_LOOKUP)/subscriber_profile_format.V2* | tail -1
      register: lookup_file_name
      args:
        chdir: "{{ cip_base_path }}/private_internal"
      when: inventory_hostname == 'control'        

    - name: Stop CIP-Control Subsystems
      ansible.builtin.command: '{{ installer_path }}/source_and_run.sh {{ item }}'
      with_items:
        - "{{ cip_base_path }}/private_internal/bin/cip-control.ksh stop control_subsystem"
      register: command_output
      become_user: "{{ functional_user }}"
      args:
        chdir: "{{ cip_base_path }}/private_internal/run"
      when: inventory_hostname == 'control'

    - name: Check if lookup file exists on CIPUI server
      stat:
        path: "{{ hostvars['control']['lookup_file_name']['stdout']Â }}"
      register: lookup_file_stats
      when: inventory_hostname == 'cipui'   

    - name: Stop CIP-Utility Subsystems
      ansible.builtin.command: '{{ installer_path }}/source_and_run.sh {{ item }}'
      with_items:
        - "{{ cip_base_path }}/private_internal/bin/cip-control.ksh stop utility"
      register: command_output
      become_user: "{{ functional_user }}"
      args:
        chdir: "{{ cip_base_path }}/private_internal/run"
      when: inventory_hostname == 'cipui' and lookup_file_stats.stat.exists

    - name: Pause for 30 seconds
      pause:
        seconds: 30

    - name: Load Subscriber Profile
      ansible.builtin.command: "{{ installer_path }}/source_and_run.sh {{ item }}"
      with_items:
        #- air sandbox run ../pset/utility/import_test_database.pset -IMPORT_DB_DUMP "{{ cip_base_path }}/private_internal/xls/seed_data_20221026_131503.sql"
        - air sandbox run ../pset/subscriber_profile/sample_customer_profile_prepare.pset
        - air sandbox run ../pset/subscriber_profile/sample_customer_profile_load.pset
      register: command_output
      become_user: "{{ functional_user }}"
      args:
        chdir: "{{ cip_base_path }}/private_internal/run"
      when: inventory_hostname == 'cipui'

    - name: Display Status
      ansible.builtin.debug:
        var: command_output
      when: inventory_hostname == 'cipui'
